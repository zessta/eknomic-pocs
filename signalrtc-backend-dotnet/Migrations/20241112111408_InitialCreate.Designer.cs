// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SignalRtc.Storage;

#nullable disable

namespace SignalRtc.Migrations
{
    [DbContext(typeof(PgdbContext))]
    [Migration("20241112111408_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SignalRtc.Models.ChatSession", b =>
                {
                    b.Property<string>("ChatSessionId")
                        .HasColumnType("text");

                    b.Property<string>("FromUser")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ToUser")
                        .HasColumnType("text");

                    b.HasKey("ChatSessionId");

                    b.ToTable("ChatSessions");
                });

            modelBuilder.Entity("SignalRtc.Models.GroupInfo", b =>
                {
                    b.Property<string>("GroupId")
                        .HasColumnType("text");

                    b.Property<string>("CreatorConnectionId")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.HasKey("GroupId");

                    b.ToTable("GroupInfos");
                });

            modelBuilder.Entity("SignalRtc.Models.UserInfo", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("text");

                    b.Property<string>("GroupInfoGroupId")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("ConnectionId");

                    b.HasIndex("GroupInfoGroupId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("SignalRtc.Models.UserInfo", b =>
                {
                    b.HasOne("SignalRtc.Models.GroupInfo", null)
                        .WithMany("Members")
                        .HasForeignKey("GroupInfoGroupId");
                });

            modelBuilder.Entity("SignalRtc.Models.GroupInfo", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
